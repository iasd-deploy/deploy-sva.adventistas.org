on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  web-deploy:
    name: 🎉 Deploy
    runs-on: ubuntu-latest
    environment: master
    steps:
    - name: 🚚 Get latest code
      uses: actions/checkout@v4

    - name: Transform wp-config.php
      run: |
        echo "Init transform: wp-config.php"

        # Função para escapar caracteres especiais em Bash
        escape_sed() {
          echo "$1" | sed -e 's/[\/&]/\\&/g'
        }

        sed -i "s/WP_DB_NAME/$(escape_sed '${{ secrets.WP_DB_NAME }}')/g" ./app/wp-config.php
        sed -i "s/WP_DB_USER/$(escape_sed '${{ secrets.WP_DB_USER }}')/g" ./app/wp-config.php
        sed -i "s/WP_DB_PASSWORD/$(escape_sed '${{ secrets.WP_DB_PASSWORD }}')/g" ./app/wp-config.php
        sed -i "s/WP_DB_HOST/$(escape_sed '${{ secrets.WP_DB_HOST }}')/g" ./app/wp-config.php
        sed -i "s/WP_S3_ACCESS_KEY/$(escape_sed '${{ secrets.WP_S3_ACCESS_KEY }}')/g" ./app/wp-config.php
        sed -i "s/WP_S3_SECRET_KEY/$(escape_sed '${{ secrets.WP_S3_SECRET_KEY }}')/g" ./app/wp-config.php
        sed -i "s/WP_S3_BUCKET/$(escape_sed '${{ secrets.WP_S3_BUCKET }}')/g" ./app/wp-config.php

        echo "End transform: wp-config.php"

    - name: 🧹 Smart Clean Server Directory
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SOURCE: "./"
        REMOTE_HOST: ${{ secrets.FTP_HOST }}
        REMOTE_PORT: 65002
        REMOTE_USER: ${{ secrets.FTP_USER }}
        TARGET: "/home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1"
        EXCLUDE: "/dist/, /node_modules/, /app/"
        SCRIPT_AFTER: |
          cd /home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1
          echo "🧹 Smart cleaning directory before deploy..."
          
          # Preservar wp-content/uploads (arquivos de mídia)
          if [ -d "wp-content/uploads" ]; then
            echo "📁 Preserving wp-content/uploads (user media files)"
            mkdir -p /tmp/wp-content-backup/uploads
            cp -r wp-content/uploads/* /tmp/wp-content-backup/uploads/
          fi
          
          # Preservar cache se existir
          if [ -d "wp-content/cache" ]; then
            echo "⚡ Preserving wp-content/cache"
            mkdir -p /tmp/wp-content-backup/cache
            cp -r wp-content/cache/* /tmp/wp-content-backup/cache/
          fi
          
          # Preservar backups se existir
          if [ -d "wp-content/backup" ]; then
            echo "💾 Preserving wp-content/backup"
            mkdir -p /tmp/wp-content-backup/backup
            cp -r wp-content/backup/* /tmp/wp-content-backup/backup/
          fi
          
          # Limpar diretório principal (exceto wp-content)
          echo "🗑️ Removing old files (preserving wp-content structure)"
          find . -mindepth 1 -maxdepth 1 ! -name 'wp-content' -exec rm -rf {} +
          
          # Limpar wp-content (exceto uploads, cache, backup)
          if [ -d "wp-content" ]; then
            echo "🧹 Cleaning wp-content (preserving user data)"
            cd wp-content
            
            # Remover apenas diretórios que serão atualizados
            rm -rf themes plugins languages mu-plugins
            
            # Remover arquivos de cache que serão recriados
            rm -f advanced-cache.php wp-cache-config.php
            
            # Remover diretório de upgrade (temporário)
            rm -rf upgrade
            
            cd ..
          fi
          
          echo "✅ Smart cleaning completed - user data preserved"

    - name: Deploy to Server - SSH
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SOURCE: "./app/"
        REMOTE_HOST: ${{ secrets.FTP_HOST }}
        REMOTE_PORT: 65002
        REMOTE_USER: ${{ secrets.FTP_USER }}
        TARGET: "/home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1"
        EXCLUDE: "/dist/, /node_modules/"
        SCRIPT_AFTER: |
          cd /home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1
          echo "🔄 Restoring preserved user data..."
          
          # Restaurar uploads se existir backup
          if [ -d "/tmp/wp-content-backup/uploads" ]; then
            echo "📁 Restoring wp-content/uploads"
            cp -r /tmp/wp-content-backup/uploads/* wp-content/uploads/ 2>/dev/null || echo "No uploads to restore"
          fi
          
          # Restaurar cache se existir backup
          if [ -d "/tmp/wp-content-backup/cache" ]; then
            echo "⚡ Restoring wp-content/cache"
            cp -r /tmp/wp-content-backup/cache/* wp-content/cache/ 2>/dev/null || echo "No cache to restore"
          fi
          
          # Restaurar backups se existir backup
          if [ -d "/tmp/wp-content-backup/backup" ]; then
            echo "💾 Restoring wp-content/backup"
            cp -r /tmp/wp-content-backup/backup/* wp-content/backup/ 2>/dev/null || echo "No backup to restore"
          fi
          
          # Limpar backup temporário
          rm -rf /tmp/wp-content-backup
          
          # Ajustar permissões
          echo "🔐 Adjusting file permissions..."
          find wp-content -type d -exec chmod 755 {} \;
          find wp-content -type f -exec chmod 644 {} \;
          chmod 755 wp-content
          
          echo "✅ Deploy completed with user data restored"