on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  web-deploy:
    name: üéâ Deploy
    runs-on: ubuntu-latest
    environment: master
    steps:
    - name: üöö Get latest code
      uses: actions/checkout@v4

    - name: Transform wp-config.php
      run: |
        echo "Init transform: wp-config.php"

        # Fun√ß√£o para escapar caracteres especiais em Bash
        escape_sed() {
          echo "$1" | sed -e 's/[\/&]/\\&/g'
        }

        sed -i "s/WP_DB_NAME/$(escape_sed '${{ secrets.WP_DB_NAME }}')/g" ./app/wp-config.php
        sed -i "s/WP_DB_USER/$(escape_sed '${{ secrets.WP_DB_USER }}')/g" ./app/wp-config.php
        sed -i "s/WP_DB_PASSWORD/$(escape_sed '${{ secrets.WP_DB_PASSWORD }}')/g" ./app/wp-config.php
        sed -i "s/WP_DB_HOST/$(escape_sed '${{ secrets.WP_DB_HOST }}')/g" ./app/wp-config.php
        sed -i "s/WP_S3_ACCESS_KEY/$(escape_sed '${{ secrets.WP_S3_ACCESS_KEY }}')/g" ./app/wp-config.php
        sed -i "s/WP_S3_SECRET_KEY/$(escape_sed '${{ secrets.WP_S3_SECRET_KEY }}')/g" ./app/wp-config.php
        sed -i "s/WP_S3_BUCKET/$(escape_sed '${{ secrets.WP_S3_BUCKET }}')/g" ./app/wp-config.php

        echo "End transform: wp-config.php"

    - name: üßπ Smart Clean Server Directory
      run: |
        echo "üßπ Preparing smart cleaning strategy..."
        echo "This step will be executed on the server during deploy"

    - name: üöÄ Smart Deploy to Server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SOURCE: "./app/"
        REMOTE_HOST: ${{ secrets.FTP_HOST }}
        REMOTE_PORT: 65002
        REMOTE_USER: ${{ secrets.FTP_USER }}
        TARGET: "/home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1"
        EXCLUDE: "/dist/, /node_modules/"
        BACKUP: false
        SCRIPT_BEFORE: |
          cd /home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1
          echo "üßπ Limpando TUDO do diret√≥rio html..."
          
          # Preservar APENAS os uploads (arquivos de m√≠dia dos usu√°rios)
          if [ -d "wp-content/uploads" ]; then
            echo "üìÅ Preservando wp-content/uploads (arquivos de m√≠dia)"
            mkdir -p /tmp/uploads-backup
            cp -r wp-content/uploads/* /tmp/uploads-backup/
            echo "‚úÖ Uploads preservados em /tmp/uploads-backup"
          else
            echo "‚ö†Ô∏è Diret√≥rio wp-content/uploads n√£o encontrado"
          fi
          
          # APAGAR TUDO do diret√≥rio atual
          echo "üóëÔ∏è Apagando TUDO do diret√≥rio html..."
          rm -rf *
          rm -rf .*
          echo "‚úÖ Diret√≥rio html completamente limpo"
          
          # Recriar estrutura b√°sica
          echo "üìÅ Recriando estrutura b√°sica..."
          mkdir -p wp-content
          echo "‚úÖ Estrutura b√°sica recriada"
        SCRIPT_AFTER: |
          cd /home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1
          echo "üîÑ Restaurando uploads preservados..."
          
          # Restaurar APENAS os uploads
          if [ -d "/tmp/uploads-backup" ]; then
            echo "üìÅ Restaurando wp-content/uploads..."
            mkdir -p wp-content/uploads
            cp -r /tmp/uploads-backup/* wp-content/uploads/
            echo "‚úÖ Uploads restaurados com sucesso"
            
            # Limpar backup tempor√°rio
            rm -rf /tmp/uploads-backup
            echo "üóëÔ∏è Backup tempor√°rio removido"
          else
            echo "‚ö†Ô∏è Nenhum backup de uploads encontrado"
          fi
          
          # Ajustar permiss√µes
          echo "üîê Ajustando permiss√µes dos arquivos..."
          find wp-content -type d -exec chmod 755 {} \;
          find wp-content -type f -exec chmod 644 {} \;
          chmod 755 wp-content
          
          echo "‚úÖ Deploy conclu√≠do - apenas uploads preservados"