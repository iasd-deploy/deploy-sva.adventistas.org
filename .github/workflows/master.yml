jobs:
  web-deploy:
    name: 🎉 Deploy
    runs-on: ubuntu-latest
    environment: master
    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: Transform wp-config.php
        run: |
          echo "Init transform: wp-config.php"

          # Função para escapar caracteres especiais em Bash
          escape_sed() {
            echo "$1" | sed -e 's/[\/&]/\\&/g'
          }

          sed -i "s/WP_DB_NAME/$(escape_sed '${{ secrets.WP_DB_NAME }}')/g" ./app/wp-config.php
          sed -i "s/WP_DB_USER/$(escape_sed '${{ secrets.WP_DB_USER }}')/g" ./app/wp-config.php
          sed -i "s/WP_DB_PASSWORD/$(escape_sed '${{ secrets.WP_DB_PASSWORD }}')/g" ./app/wp-config.php
          sed -i "s/WP_DB_HOST/$(escape_sed '${{ secrets.WP_DB_HOST }}')/g" ./app/wp-config.php
          sed -i "s/WP_S3_ACCESS_KEY/$(escape_sed '${{ secrets.WP_S3_ACCESS_KEY }}')/g" ./app/wp-config.php
          sed -i "s/WP_S3_SECRET_KEY/$(escape_sed '${{ secrets.WP_S3_SECRET_KEY }}')/g" ./app/wp-config.php
          sed -i "s/WP_S3_BUCKET/$(escape_sed '${{ secrets.WP_S3_BUCKET }}')/g" ./app/wp-config.php

          echo "End transform: wp-config.php"

      - name: 🚀 Smart Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "./app/"
          REMOTE_HOST: ${{ secrets.FTP_HOST }}
          REMOTE_PORT: 65002
          REMOTE_USER: ${{ secrets.FTP_USER }}
          TARGET: "/home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1"
          EXCLUDE: "/dist/, /node_modules/"
          BACKUP: false
          REMOVE_OLD_FILES: true
          STRIP_COMPONENTS: 0
          SCRIPT_BEFORE: |
            cd /home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1
            echo "🧹 Iniciando a limpeza do diretório do site..."

            # 1. Mover o diretório de uploads para um local temporário
            if [ -d "wp-content/uploads" ]; then
              echo "📁 Encontrado 'wp-content/uploads'. Movendo para /tmp/uploads-backup."
              mkdir -p /tmp/uploads-backup
              mv wp-content/uploads /tmp/uploads-backup/
              echo "✅ 'uploads' movido com sucesso."
            else
              echo "⚠️ 'wp-content/uploads' não encontrado. Nenhum backup necessário."
            fi

            # 2. Apagar todo o conteúdo atual do diretório
            echo "🗑️ Apagando todo o conteúdo do diretório atual..."
            # O '.' no final garante que todos os arquivos e diretórios, incluindo ocultos, sejam removidos.
            rm -rf ./* .* 2>/dev/null || true
            echo "✅ Diretório limpo."
          SCRIPT_AFTER: |
            cd /home/${{ secrets.FTP_USER }}/domains/sva.adventistas.org/public_html1
            echo "🔄 Restaurando uploads e ajustando permissões..."

            # 3. Restaurar a pasta de uploads para o novo diretório wp-content
            if [ -d "/tmp/uploads-backup/uploads" ]; then
              echo "📁 Restaurando 'wp-content/uploads'..."
              # Garante que a pasta wp-content exista para receber os uploads
              mkdir -p wp-content
              mv /tmp/uploads-backup/uploads wp-content/
              echo "✅ 'uploads' restaurado com sucesso."
              # Limpar o backup temporário
              rm -rf /tmp/uploads-backup
              echo "🗑️ Backup temporário removido."
            else
              echo "⚠️ Nenhum backup de uploads encontrado para restaurar."
            fi

            # 4. Ajustar permissões para segurança
            echo "🔐 Ajustando permissões dos arquivos..."
            # Permissões para diretórios (755) e arquivos (644)
            find . -type d -exec chmod 755 {} \;
            find . -type f -exec chmod 644 {} \;
            echo "✅ Permissões ajustadas."

            echo "🚀 Deploy concluído com sucesso!"